import{ah as i,ai as r,ak as m,hi as v,aH as w,bq as S,fV as O,cA as F,cD as b,dq as q,gs as I,b2 as N,cf as _,el as J,aq as h}from"./index-d3195b17.js";import C from"./FeatureLayer-9d9dc92b.js";import{d as P}from"./FeatureSet-f7a1380d.js";import{l as j}from"./clientSideDefaults-d46b8d80.js";import{b as l}from"./Query-f1607220.js";import"./UniqueValueRenderer-9d6d8506.js";import"./ColorStop-c5e9d853.js";import"./diffUtils-b5203f5e.js";import"./colorRamps-86452aa8.js";import"./jsonUtils-7c9a64a6.js";import"./DictionaryLoader-64b435d8.js";import"./FieldsIndex-a5446f2b.js";import"./UnknownTimeZone-03c4b711.js";import"./heatmapUtils-7081b352.js";import"./MultiOriginJSONSupport-9c569f95.js";import"./FeatureLayerBase-7e08d69e.js";import"./commonProperties-90280f28.js";import"./ElevationInfo-a4c4c4eb.js";import"./featureLayerUtils-cd670376.js";import"./featureQueryAll-14a16abc.js";import"./AttachmentQuery-e6115c82.js";import"./RelationshipQuery-4dd9c00d.js";import"./LayerFloorInfo-ce13956b.js";import"./serviceCapabilitiesUtils-9fb1a794.js";import"./editsZScale-9375ef27.js";import"./queryZScale-130e9ed5.js";import"./APIKeyMixin-0a457011.js";import"./ArcGISService-797262a1.js";import"./BlendLayer-c5b75f55.js";import"./jsonUtils-b73a148b.js";import"./CustomParametersMixin-26e67f7d.js";import"./EditBusLayer-2e5cb13a.js";import"./FeatureEffectLayer-cdff10fa.js";import"./FeatureEffect-3c293895.js";import"./FeatureFilter-dc6e76e7.js";import"./FeatureReductionLayer-5568b414.js";import"./FeatureReductionSelection-032b9aed.js";import"./LabelClass-e4e56038.js";import"./defaults-01cfa0fb.js";import"./defaultsJSON-59981e75.js";import"./MD5-715f37cd.js";import"./OperationalLayer-f6884624.js";import"./OrderedLayer-64155c3a.js";import"./PortalLayer-e38eb8f2.js";import"./portalItemUtils-859fdbc0.js";import"./ScaleRangeLayer-8e8ce7ef.js";import"./TemporalLayer-2d2fe295.js";import"./FeatureTemplate-a5bbc341.js";import"./FeatureType-16cea36d.js";import"./fieldProperties-a11e9ef9.js";import"./labelingInfo-0364027f.js";import"./versionUtils-a0e52a88.js";import"./styleUtils-6d92eebb.js";import"./TopFeaturesQuery-271d35f7.js";import"./popupUtils-410f0696.js";import"./interfaces-f1f22245.js";import"./QueryEngineCapabilities-85c4f1d0.js";let n=class extends v{constructor(t){super(t),this.type="csv",this.refresh=w(async e=>{await this.load();const{extent:o,timeExtent:a}=await this._connection.invoke("refresh",e);return o&&(this.sourceJSON.extent=o),a&&(this.sourceJSON.timeInfo.timeExtent=[a.start,a.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(t){const e=t!=null?t.signal:null;return this.addResolvingPromise(this._startWorker(e)),Promise.resolve(this)}destroy(){var t;(t=this._connection)==null||t.close(),this._connection=null}async openPorts(){return await this.load(),this._connection.openPorts()}async queryFeatures(t,e={}){await this.load(e);const o=await this._connection.invoke("queryFeatures",t?t.toJSON():null,e);return P.fromJSON(o)}async queryFeaturesJSON(t,e={}){return await this.load(e),this._connection.invoke("queryFeatures",t?t.toJSON():null,e)}async queryFeatureCount(t,e={}){return await this.load(e),this._connection.invoke("queryFeatureCount",t?t.toJSON():null,e)}async queryObjectIds(t,e={}){return await this.load(e),this._connection.invoke("queryObjectIds",t?t.toJSON():null,e)}async queryExtent(t,e={}){await this.load(e);const o=await this._connection.invoke("queryExtent",t?t.toJSON():null,e);return{count:o.count,extent:S.fromJSON(o.extent)}}async querySnapping(t,e={}){return await this.load(e),this._connection.invoke("querySnapping",t,e)}async _startWorker(t){this._connection=await O("CSVSourceWorker",{strategy:F("feature-layers-workers")?"dedicated":"local",signal:t,registryTarget:this});const{url:e,delimiter:o,fields:a,latitudeField:y,longitudeField:f,spatialReference:u,timeInfo:d}=this.loadOptions,p=await this._connection.invoke("load",{url:e,customParameters:this.customParameters,parsingOptions:{delimiter:o,fields:a==null?void 0:a.map(g=>g.toJSON()),latitudeField:y,longitudeField:f,spatialReference:u==null?void 0:u.toJSON(),timeInfo:d==null?void 0:d.toJSON()}},{signal:t});this.locationInfo=p.locationInfo,this.sourceJSON=p.layerDefinition,this.delimiter=p.delimiter}};i([r()],n.prototype,"type",void 0),i([r()],n.prototype,"loadOptions",void 0),i([r()],n.prototype,"customParameters",void 0),i([r()],n.prototype,"locationInfo",void 0),i([r()],n.prototype,"sourceJSON",void 0),i([r()],n.prototype,"delimiter",void 0),n=i([m("esri.layers.graphics.sources.CSVSource")],n);function c(t,e){throw new h(e,`CSVLayer (title: ${t.title}, id: ${t.id}) cannot be saved to a portal item`)}let s=class extends C{constructor(...t){super(...t),this.geometryType="point",this.capabilities=j(!1,!1),this.delimiter=null,this.editingEnabled=!1,this.fields=null,this.latitudeField=null,this.locationType="coordinates",this.longitudeField=null,this.operationalLayerType="CSV",this.outFields=["*"],this.path=null,this.spatialReference=N.WGS84,this.source=null,this.type="csv"}normalizeCtorArgs(t,e){return typeof t=="string"?{url:t,...e}:t}load(t){const e=t!=null?t.signal:null,o=this.loadFromPortal({supportedTypes:["CSV"],supportsData:!1},t).catch(_).then(async()=>this.initLayerProperties(await this.createGraphicsSource(e)));return this.addResolvingPromise(o),Promise.resolve(this)}get isTable(){return this.loaded&&this.geometryType==null}readWebMapLabelsVisible(t,e){var o,a;return e.showLabels!=null?e.showLabels:!!((a=(o=e.layerDefinition)==null?void 0:o.drawingInfo)!=null&&a.labelingInfo)}set url(t){if(!t)return void this._set("url",t);const e=J(t);this._set("url",e.path),e.query&&(this.customParameters={...this.customParameters,...e.query})}async createGraphicsSource(t){const e=new n({loadOptions:{delimiter:this.delimiter,fields:this.fields,latitudeField:this.latitudeField??void 0,longitudeField:this.longitudeField??void 0,spatialReference:this.spatialReference??void 0,timeInfo:this.timeInfo??void 0,url:this.url},customParameters:this.customParameters??void 0});return this._set("source",e),await e.load({signal:t}),this.read({locationInfo:e.locationInfo,columnDelimiter:e.delimiter},{origin:"service",url:this.parsedUrl}),e}queryFeatures(t,e){return this.load().then(()=>this.source.queryFeatures(l.from(t)||this.createQuery())).then(o=>{if(o!=null&&o.features)for(const a of o.features)a.layer=a.sourceLayer=this;return o})}queryObjectIds(t,e){return this.load().then(()=>this.source.queryObjectIds(l.from(t)||this.createQuery()))}queryFeatureCount(t,e){return this.load().then(()=>this.source.queryFeatureCount(l.from(t)||this.createQuery()))}queryExtent(t,e){return this.load().then(()=>this.source.queryExtent(l.from(t)||this.createQuery()))}read(t,e){super.read(t,e),e&&e.origin==="service"&&this.revert(["latitudeField","longitudeField"],"service")}write(t,e){return super.write(t,{...e,writeLayerSchema:!0})}clone(){throw new h("csv-layer:clone",`CSVLayer (title: ${this.title}, id: ${this.id}) cannot be cloned`)}async save(t){return c(this,"csv-layer:save")}async saveAs(t,e){return c(this,"csv-layer:save-as")}async hasDataChanged(){try{const{dataChanged:t,updates:e}=await this.source.refresh(this.customParameters);return e!=null&&this.read(e,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),t}catch{}return!1}_verifyFields(){}_verifySource(){}_hasMemorySource(){return!1}};i([r({readOnly:!0,json:{read:!1,write:!1}})],s.prototype,"capabilities",void 0),i([r({type:[","," ",";","|","	"],json:{read:{source:"columnDelimiter"},write:{target:"columnDelimiter",ignoreOrigin:!0}}})],s.prototype,"delimiter",void 0),i([r({readOnly:!0,type:Boolean,json:{origins:{"web-scene":{read:!1,write:!1}}}})],s.prototype,"editingEnabled",void 0),i([r({json:{read:{source:"layerDefinition.fields"},write:{target:"layerDefinition.fields"}}})],s.prototype,"fields",void 0),i([r({type:Boolean,readOnly:!0})],s.prototype,"isTable",null),i([b("web-map","labelsVisible",["layerDefinition.drawingInfo.labelingInfo","showLabels"])],s.prototype,"readWebMapLabelsVisible",null),i([r({type:String,json:{read:{source:"locationInfo.latitudeFieldName"},write:{target:"locationInfo.latitudeFieldName",ignoreOrigin:!0}}})],s.prototype,"latitudeField",void 0),i([r({type:["show","hide"]})],s.prototype,"listMode",void 0),i([r({type:["coordinates"],json:{read:{source:"locationInfo.locationType"},write:{target:"locationInfo.locationType",ignoreOrigin:!0,isRequired:!0}}})],s.prototype,"locationType",void 0),i([r({type:String,json:{read:{source:"locationInfo.longitudeFieldName"},write:{target:"locationInfo.longitudeFieldName",ignoreOrigin:!0}}})],s.prototype,"longitudeField",void 0),i([r({type:["CSV"]})],s.prototype,"operationalLayerType",void 0),i([r()],s.prototype,"outFields",void 0),i([r({type:String,json:{origins:{"web-scene":{read:!1,write:!1}},read:!1,write:!1}})],s.prototype,"path",void 0),i([r({json:{read:!1},cast:null,type:n,readOnly:!0})],s.prototype,"source",void 0),i([r({json:{read:!1},value:"csv",readOnly:!0})],s.prototype,"type",void 0),i([r({json:{read:q,write:{isRequired:!0,ignoreOrigin:!0,writer:I}}})],s.prototype,"url",null),s=i([m("esri.layers.CSVLayer")],s);const Dt=s;export{Dt as default};
