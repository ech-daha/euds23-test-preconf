import{fj as w,au as T,el as _,bG as I,ah as o,ai as s,ak as u,aJ as O,aw as L,g1 as $,cf as x,aq as l,b7 as c,cD as b,bd as j}from"./index-d3195b17.js";import{m as M}from"./MultiOriginJSONSupport-9c569f95.js";import{j as N}from"./persistable-11fab1fe.js";import{i as A}from"./APIKeyMixin-0a457011.js";import{l as E}from"./ArcGISService-797262a1.js";import{u as D}from"./OperationalLayer-f6884624.js";import{j as J}from"./PortalLayer-e38eb8f2.js";import{t as V}from"./ScaleRangeLayer-8e8ce7ef.js";import{E as P,P as h}from"./SceneService-d502042e.js";import{f as U}from"./commonProperties-90280f28.js";import{s as K,l as R,u as z,m as C}from"./I3SLayerDefinitions-e0fc50f3.js";import{f as d}from"./SceneModification-9650d566.js";import{x as f,p as k,E as q}from"./elevationInfoUtils-656308c0.js";import"./MD5-715f37cd.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./resourceExtension-b3624c1c.js";import"./portalItemUtils-859fdbc0.js";import"./originUtils-cfe4feaf.js";import"./I3SIndexInfo-f2558a5e.js";import"./saveAPIKeyUtils-c4fec724.js";import"./saveUtils-1ca51a2b.js";import"./resourceUtils-00105fb7.js";import"./ElevationInfo-a4c4c4eb.js";var a;let n=a=class extends w(T.ofType(d)){constructor(e){super(e),this.url=null}clone(){return new a({url:this.url,items:this.items.map(e=>e.clone())})}toJSON(e){return this.toArray().map(t=>t.toJSON(e)).filter(t=>!!t.geometry)}static fromJSON(e,t){const r=new a;for(const p of e)r.add(d.fromJSON(p,t));return r}static async fromUrl(e,t,r){const p={url:_(e),origin:"service"},v=await I(e,{responseType:"json",signal:r==null?void 0:r.signal}),S=t.toJSON(),m=[];for(const y of v.data)m.push(d.fromJSON({...y,geometry:{...y.geometry,spatialReference:S}},p));return new a({url:e,items:m})}};o([s({type:String})],n.prototype,"url",void 0),n=a=o([u("esri.layers.support.SceneModifications")],n);const g=n;let i=class extends P(E(D(J(V(M(A(j))))))){constructor(...e){super(...e),this.geometryType="mesh",this.operationalLayerType="IntegratedMeshLayer",this.type="integrated-mesh",this.nodePages=null,this.materialDefinitions=null,this.textureSetDefinitions=null,this.geometryDefinitions=null,this.serviceUpdateTimeStamp=null,this.profile="mesh-pyramids",this.modifications=null,this._modificationsSource=null,this.path=null}initialize(){this.addHandles(O(()=>this.modifications,"after-changes",()=>this.modifications=this.modifications,L))}normalizeCtorArgs(e,t){return typeof e=="string"?{url:e,...t}:e}readModifications(e,t,r){this._modificationsSource={url:$(e,r),context:r}}set elevationInfo(e){this._set("elevationInfo",e),this._validateElevationInfo()}async load(e){return this.addResolvingPromise(this._doLoad(e)),this}async _doLoad(e){const t=e==null?void 0:e.signal;try{await this.loadFromPortal({supportedTypes:["Scene Service"]},e)}catch(r){x(r)}if(await this._fetchService(t),this._modificationsSource!=null){const r=await g.fromUrl(this._modificationsSource.url,this.spatialReference,e);this.setAtOrigin("modifications",r,this._modificationsSource.context.origin),this._modificationsSource=null}await this._fetchIndexAndUpdateExtent(this.nodePages,t)}beforeSave(){if(this._modificationsSource!=null)return this.load().then(()=>{},()=>{})}async saveAs(e,t){return this._debouncedSaveOperations(h.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"},e)}async save(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"integrated-mesh"};return this._debouncedSaveOperations(h.SAVE,e)}validateLayer(e){if(e.layerType&&e.layerType!=="IntegratedMesh")throw new l("integrated-mesh-layer:layer-type-not-supported","IntegratedMeshLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new l("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"});if(this.version.major>1)throw new l("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x"})}_getTypeKeywords(){return["IntegratedMeshLayer"]}_validateElevationInfo(){const e=this.elevationInfo,t="Integrated mesh layers";f(c.getLogger(this),k(t,"absolute-height",e)),f(c.getLogger(this),q(t,e))}};o([s({type:String,readOnly:!0})],i.prototype,"geometryType",void 0),o([s({type:["show","hide"]})],i.prototype,"listMode",void 0),o([s({type:["IntegratedMeshLayer"]})],i.prototype,"operationalLayerType",void 0),o([s({json:{read:!1},readOnly:!0})],i.prototype,"type",void 0),o([s({type:K,readOnly:!0})],i.prototype,"nodePages",void 0),o([s({type:[R],readOnly:!0})],i.prototype,"materialDefinitions",void 0),o([s({type:[z],readOnly:!0})],i.prototype,"textureSetDefinitions",void 0),o([s({type:[C],readOnly:!0})],i.prototype,"geometryDefinitions",void 0),o([s({readOnly:!0})],i.prototype,"serviceUpdateTimeStamp",void 0),o([s({type:g}),N({origins:["web-scene","portal-item"],type:"resource",prefix:"modifications"})],i.prototype,"modifications",void 0),o([b(["web-scene","portal-item"],"modifications")],i.prototype,"readModifications",null),o([s(U)],i.prototype,"elevationInfo",null),o([s({type:String,json:{origins:{"web-scene":{read:!0,write:!0},"portal-item":{read:!0,write:!0}},read:!1}})],i.prototype,"path",void 0),i=o([u("esri.layers.IntegratedMeshLayer")],i);const he=i;export{he as default};
